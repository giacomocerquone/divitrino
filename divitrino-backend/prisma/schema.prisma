generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  email    String  @unique
  name     String
  password String
  groups   Group[]

  paymentsAsPayer Payment[]  @relation("payer")
  paymentsAsPayee Payment[]  @relation("payee")
  purchaseAsPayer Purchase[]
  products        Product[]
  invites         Invite[]
  addedPurchases  Purchase[] @relation("purchaseAddedBy")
  addedPayments   Payment[]  @relation("paymentAddedBy")
}

model Group {
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  id        String     @id @default(uuid())
  name      String
  users     User[]
  purchases Purchase[]
  payments  Payment[]
  invites   Invite[]
}

model Purchase {
  id            String    @id @default(uuid())
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  amount        Int
  description   String
  products      Product[]
  group         Group     @relation(fields: [groupId], references: [id])
  groupId       String
  payer         User      @relation(fields: [payerId], references: [id])
  payerId       String
  date          DateTime
  addedBy       User      @relation("purchaseAddedBy", fields: [addedByUserId], references: [id])
  addedByUserId String
}

model Product {
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  id             String   @id @default(uuid())
  name           String
  pricePerDebtor Int
  debtors        User[]
  purchase       Purchase @relation(fields: [purchaseId], references: [id])
  purchaseId     String
}

model Payment {
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  id            String   @id @default(uuid())
  group         Group    @relation(fields: [groupId], references: [id])
  groupId       String
  amount        Int
  payerId       String
  payeeId       String
  payer         User     @relation("payer", fields: [payerId], references: [id])
  payee         User     @relation("payee", fields: [payeeId], references: [id])
  date          DateTime
  addedBy       User     @relation("paymentAddedBy", fields: [addedByUserId], references: [id])
  addedByUserId String
}

model Invite {
  id              Int    @id @default(autoincrement())
  invitedBy       User   @relation(fields: [invitedByUserId], references: [id])
  invitedByUserId String
  group           Group  @relation(fields: [groupId], references: [id])
  groupId         String

  used Boolean @default(false)
  code String
}
